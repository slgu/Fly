1.socket library and distribute keyword (brian)
3.array set map support (slgu)
5.implement chan.cpp (slgu)
6.fly objcall (brian)
7.integrate build in code (slgu) done

s = dispatch f(a, b) ip port

build-in functions:
format:
    funcname, type_list -> "function code"

    type change:
        float()
        int()
        str()
    system:
        sleep()
        exit()
CODEGEN:
cp1.We are implicit typing like C++ template.
    Unlike ocaml type variable
cp2.when set None variable, we need class modification
    like A::null.
    (Rule: type needs to be decided when first access to it*)
cp3.
    (Small optimization)


a = @server;
a.listen()
while True:
    con = a.accept
    con.send
    close
    receive
b = @client
b.connect()
b.send
close
receivce
