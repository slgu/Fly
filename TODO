1.socket library and distribute keyword (brian)
2.global variable (easy)
3.array set map support (brian)
4.implement clojure (slgu)
5.implement chan.cpp (slgu)

build-in functions:

format:
    funcname, type_list -> "function code"

    type change:
        float()
        int()
        str()
    system:
        sleep()
        exit()


CODEGEN:

cp1.We are implicit typing like C++ template.
    Unlike ocaml type variable
cp2.when set None variable, we need class modification
    like A::null.
    (Rule: type needs to be decided when first access to it*)
cp3.
    (Small optimization)
